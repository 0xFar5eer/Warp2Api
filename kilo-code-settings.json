{
  "providerProfiles": {
    "currentApiConfigName": "warp2api_local",
    "apiConfigs": {
      "default": {
        "diffEnabled": true,
        "fuzzyMatchThreshold": 1,
        "reasoningEffort": "high",
        "openAiBaseUrl": "http://localhost:3010/v1",
        "openAiApiKey": "dummy",
        "openAiModelId": "claude-4-sonnet",
        "openAiHeaders": {},
        "apiProvider": "openai",
        "id": "hx05uzogja"
      },
      "warp2api_remote": {
        "diffEnabled": true,
        "fuzzyMatchThreshold": 1,
        "reasoningEffort": "high",
        "openAiBaseUrl": "http://api.geo-target-proxy.com:4010/v1",
        "openAiApiKey": "dummy_key",
        "openAiModelId": "claude-4.1-opus",
        "openAiHeaders": {},
        "apiProvider": "openai",
        "id": "t0k06qzaygk"
      },
      "warp2api_local": {
        "diffEnabled": true,
        "fuzzyMatchThreshold": 1,
        "reasoningEffort": "high",
        "openAiBaseUrl": "http://localhost:4010/v1",
        "openAiApiKey": "dummy_key",
        "openAiLegacyFormat": false,
        "openAiModelId": "claude-4.1-opus",
        "openAiHeaders": {},
        "apiProvider": "openai",
        "id": "q6hvnycho2f"
      }
    },
    "modeApiConfigs": {
      "architect": "q6hvnycho2f",
      "code": "q6hvnycho2f",
      "ask": "q6hvnycho2f",
      "debug": "q6hvnycho2f",
      "orchestrator": "q6hvnycho2f"
    },
    "migrations": {
      "rateLimitSecondsMigrated": true,
      "diffSettingsMigrated": true,
      "openAiHeadersMigrated": true,
      "consecutiveMistakeLimitMigrated": true,
      "todoListEnabledMigrated": true,
      "morphApiKeyMigrated": true
    }
  },
  "globalSettings": {
    "openRouterImageApiKey": "",
    "openRouterImageGenerationSelectedModel": "",
    "kiloCodeImageApiKey": "",
    "condensingApiConfigId": "",
    "customCondensingPrompt": "",
    "autoApprovalEnabled": true,
    "alwaysAllowReadOnly": true,
    "alwaysAllowReadOnlyOutsideWorkspace": true,
    "alwaysAllowWrite": true,
    "alwaysAllowWriteOutsideWorkspace": false,
    "alwaysAllowWriteProtected": false,
    "writeDelayMs": 1000,
    "alwaysAllowBrowser": true,
    "alwaysApproveResubmit": true,
    "requestDelaySeconds": 5,
    "alwaysAllowMcp": true,
    "alwaysAllowModeSwitch": true,
    "alwaysAllowSubtasks": true,
    "alwaysAllowExecute": true,
    "alwaysAllowFollowupQuestions": true,
    "followupAutoApproveTimeoutMs": 60000,
    "alwaysAllowUpdateTodoList": true,
    "allowedCommands": [
      "git log",
      "git diff",
      "git show",
      "cargo test",
      "cargo clippy",
      "cargo build",
      "cargo run",
      "cargo check",
      "sed -i  s/generate_fresh_email_for_testing().await/generate_fresh_email_for_testing()/g examples/send_fetch_demo.rs examples/mail_retrieval_demo.rs examples/integration_test.rs examples/comprehensive_test_report.rs examples/email_expiration_demo.rs examples/email_sending_demo.rs",
      "sed",
      "find",
      "find examples",
      "find examples -name \"*.rs\" -exec grep -l \"generate_fresh_email_for_testing().await\" {} ;",
      "cargo",
      "cd",
      "cd libs/gomining-client",
      "rm",
      "ls",
      "echo",
      "docker-compose",
      "python",
      "python3",
      "uv",
      "uv run",
      "uv run python",
      "docker-compose build",
      "docker-compose build --no-cache",
      "docker",
      "docker logs",
      "docker logs warp2api_proxy",
      "curl",
      "grep",
      "git",
      "git status",
      "git add",
      "head",
      "tail",
      "} | jq .",
      "jq",
      "docker ps",
      "sleep",
      "docker ps --filter name=warp2api_proxy --format \"table {{.Names}}\\t{{.Status}}\"",
      "sleep 10",
      "chmod +x",
      "chmod",
      "./test_api_key.sh",
      "chmod +x test_api_key.sh",
      "./test_api_key_final.sh",
      "chmod +x test_api_key_final.sh",
      "git add -A",
      "git commit -m Configure server for single worker with 100 concurrent connections",
      "git commit",
      "mkdir",
      "pip3"
    ],
    "deniedCommands": [],
    "autoCondenseContext": true,
    "autoCondenseContextPercent": 100,
    "maxConcurrentFileReads": 5,
    "allowVeryLargeReads": false,
    "includeDiagnosticMessages": true,
    "maxDiagnosticMessages": 50,
    "browserToolEnabled": true,
    "browserViewportSize": "900x600",
    "showAutoApproveMenu": true,
    "showTaskTimeline": true,
    "globalWorkflowToggles": {},
    "screenshotQuality": 75,
    "remoteBrowserEnabled": true,
    "enableCheckpoints": true,
    "ttsEnabled": false,
    "ttsSpeed": 1,
    "soundEnabled": false,
    "soundVolume": 0.5,
    "systemNotificationsEnabled": true,
    "maxOpenTabsContext": 20,
    "maxWorkspaceFiles": 200,
    "showRooIgnoredFiles": false,
    "maxReadFileLine": -1,
    "maxImageFileSize": 5,
    "maxTotalImageSize": 20,
    "terminalOutputLineLimit": 500,
    "terminalOutputCharacterLimit": 50000,
    "terminalShellIntegrationTimeout": 5000,
    "terminalShellIntegrationDisabled": true,
    "terminalCommandDelay": 0,
    "terminalPowershellCounter": false,
    "terminalZshClearEolMark": true,
    "terminalZshOhMy": false,
    "terminalZshP10k": false,
    "terminalZdotdir": false,
    "terminalCompressProgressBar": true,
    "diffEnabled": true,
    "fuzzyMatchThreshold": 1,
    "experiments": {
      "morphFastApply": true,
      "powerSteering": true,
      "multiFileApplyDiff": true,
      "preventFocusDisruption": false,
      "imageGeneration": false,
      "runSlashCommand": false
    },
    "codebaseIndexModels": {
      "openai": {
        "text-embedding-3-small": { "dimension": 1536 },
        "text-embedding-3-large": { "dimension": 3072 },
        "text-embedding-ada-002": { "dimension": 1536 }
      },
      "ollama": {
        "nomic-embed-text": { "dimension": 768 },
        "nomic-embed-code": { "dimension": 3584 },
        "mxbai-embed-large": { "dimension": 1024 },
        "all-minilm": { "dimension": 384 }
      },
      "openai-compatible": {
        "text-embedding-3-small": { "dimension": 1536 },
        "text-embedding-3-large": { "dimension": 3072 },
        "text-embedding-ada-002": { "dimension": 1536 },
        "nomic-embed-code": { "dimension": 3584 }
      },
      "gemini": {
        "text-embedding-004": { "dimension": 768 },
        "gemini-embedding-001": { "dimension": 3072 }
      },
      "mistral": { "codestral-embed-2505": { "dimension": 1536 } },
      "vercel-ai-gateway": {
        "openai/text-embedding-3-small": { "dimension": 1536 },
        "openai/text-embedding-3-large": { "dimension": 3072 },
        "openai/text-embedding-ada-002": { "dimension": 1536 },
        "cohere/embed-v4.0": { "dimension": 1024 },
        "google/gemini-embedding-001": { "dimension": 3072 },
        "google/text-embedding-005": { "dimension": 768 },
        "google/text-multilingual-embedding-002": { "dimension": 768 },
        "amazon/titan-embed-text-v2": { "dimension": 1024 },
        "mistral/codestral-embed": { "dimension": 1536 },
        "mistral/mistral-embed": { "dimension": 1024 }
      }
    },
    "codebaseIndexConfig": {
      "codebaseIndexEnabled": true,
      "codebaseIndexQdrantUrl": "http://localhost:6333",
      "codebaseIndexQdrantApiKey": "",
      "codebaseIndexEmbedderProvider": "openai-compatible",
      "codebaseIndexEmbedderBaseUrl": "http://localhost:4010/v1",
      "codebaseIndexEmbedderApiKey": "dummy_key",
      "codebaseIndexEmbedderModelId": "claude-4.1-opus",
      "codebaseIndexEmbedderModelDimension": 1536,
      "codebaseIndexSearchMinScore": 0.4,
      "codebaseIndexSearchMaxResults": 50,
      "codebaseIndexOpenAiCompatibleBaseUrl": "http://localhost:4010/v1",
      "codebaseIndexOpenAiCompatibleApiKey": "dummy_key",
      "codebaseIndexChunkSize": 1000,
      "codebaseIndexOverlapSize": 200
    },
    "language": "en",
    "telemetrySetting": "enabled",
    "mcpEnabled": true,
    "mode": "ask",
    "customModes": [],
    "customSupportPrompts": {},
    "dismissedNotificationIds": [
      "teams-announcment-sep-10",
      "two-new-models-two-million"
    ],
    "terminalCommandApiConfigId": "",
    "ghostServiceSettings": {
      "enableQuickInlineTaskKeybinding": true,
      "enableSmartInlineTaskKeybinding": true
    },
    "includeTaskHistoryInEnhance": true,
    "historyPreviewCollapsed": false,
    "profileThresholds": {}
  }
}
